{"version":3,"sources":["components/img/male-icon.jpg","components/img/female-icon.jpg","components/img/unknown.png","serviceWorker.js","components/contact/index.js","components/contact/contact.js","components/check/index.js","components/check/check.js","components/contacts/contacts.js","components/contacts/index.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Contact","contacts","firstName","lastName","phone","gender","className","Check","type","name","defaultChecked","Component","Contacts","state","search","checked","handleSearchChange","e","setState","target","value","filter","contact","toLowerCase","includes","handleSexChange","src","male","alt","female","unknown","this","onChange","placeholder","map","id","key","setGender","onClick","PhoneBook","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,wMCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wCCjBSC,G,YCEC,SAACC,GAAc,IACpBC,EAAsCD,EAAtCC,UAAWC,EAA2BF,EAA3BE,SAAUC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,OAEnC,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,QAAQJ,EAAvB,IAAmCC,GACnC,yBAAKG,UAAU,UAAUD,IAE7B,yBAAKC,UAAU,SAASF,GACxB,gCCZGG,G,6KCIP,OACI,yBAAKD,UAAU,SACX,+BACI,2BAAOE,KAAK,WAAWC,KAAK,OAAOC,gBAAc,IADrD,QAIA,+BACI,2BAAOF,KAAK,WAAWC,KAAK,SAASC,gBAAc,IADvD,UAIA,+BACI,2BAAOF,KAAK,WAAWC,KAAK,MAAMC,gBAAc,IADpD,Y,GAZmBC,c,gDCM7BV,EAAW,CAAC,CACdC,UAAW,uCACXC,SAAU,2EACVC,MAAO,gBACPC,OAAQ,QACT,CACCH,UAAW,iCACXC,SAAU,+DACVC,MAAO,gBACPC,OAAQ,UACT,CACCH,UAAW,yDACXC,SAAU,mDACVC,MAAO,iBACR,CACCF,UAAW,iCACXC,SAAU,mDACVC,MAAO,gBACPC,OAAQ,UACT,CACCH,UAAW,uCACXC,SAAU,yDACVC,MAAO,gBACPC,OAAQ,QACT,CACCH,UAAW,uCACXC,SAAU,6CACVC,MAAO,gBACPC,OAAQ,SCpCGO,E,4MD2CXC,MAAQ,CACJZ,SAAS,GAAD,OAAMA,GACda,OAAQ,GACRC,SAAS,G,EAcbC,mBAAqB,SAACC,GAClB,EAAKC,SAAS,CACVJ,OAAQG,EAAEE,OAAOC,QAGrB,EAAKF,SAAS,CACVjB,SAAS,YAAMA,EAASoB,QAAO,SAAAC,GAC3B,OACIA,EAAQnB,SAASoB,cAAcC,SAASP,EAAEE,OAAOC,MAAMG,gBACpDD,EAAQpB,UAAUqB,cAAcC,SAASP,EAAEE,OAAOC,MAAMG,gBACxDD,EAAQlB,MAAMoB,SAASP,EAAEE,OAAOC,c,EAMnDK,gBAAkB,SAACR,GACf,EAAKC,SAAS,CACVH,QAASE,EAAEE,OAAOC,QAGtB,EAAKF,UAAS,SAACH,GAAD,MAAc,CACxBA,SAAUA,O,wDAjCRV,GACN,MAAe,SAAXA,EACO,yBAAKqB,IAAKC,IAAMC,IAAI,SACT,WAAXvB,EACA,yBAAKqB,IAAKG,IAAQD,IAAI,WAGtB,yBAAKF,IAAKI,IAASF,IAAI,c,+BA8B5B,IAAD,OACL,OACI,6BACI,6BACI,2BAAOR,MAAOW,KAAKlB,MAAMC,OAAQkB,SAAUD,KAAKf,mBAAoBV,UAAU,eAAeE,KAAK,OAAOyB,YAAY,oCAGxHF,KAAKlB,MAAMZ,SAASiC,KAAI,SAACZ,EAASa,GAAV,OACrB,kBAAC,EAAD,CACIC,IAAOD,EACPjC,UAAaoB,EAAQpB,UACrBC,SAAYmB,EAAQnB,SACpBC,MAASkB,EAAQlB,MACjBC,OAAU,EAAKgC,UAAUf,EAAQjB,aAIzC,kBAAC,EAAD,CACIiC,QAAWP,KAAKN,uB,GA/DEd,aEtCjB4B,G,6KAEjB,OACE,yBAAKjC,UAAU,YACb,gFACA,kBAAC,EAAD,W,GAL+BK,c,MCEvC6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SRyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f0463a07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/male-icon.592396bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/female-icon.321b22fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/unknown.ab7f36c5.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Contact from './contact';\r\nexport default Contact;","import React from 'react';\r\nimport './contact.css';\r\n\r\nconst Contact = (contacts) => {\r\n    const {firstName, lastName, phone, gender} = contacts;\r\n\r\n    return (\r\n        <div className=\"Contact\">\r\n            <div className=\"name-first\">\r\n                <div className=\"name\">{firstName} {lastName}</div>\r\n                <div className=\"gender\">{gender}</div>\r\n            </div>\r\n            <div className=\"phone\">{phone}</div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import Check from './check';\r\nexport default Check;","import React, {Component} from 'react';\r\nimport './check.css'\r\n\r\nexport default class Check extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"check\">\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"male\" defaultChecked/>Male\r\n                </label>\r\n                    \r\n                <label>\r\n                    <input type=\"checkbox\" name=\"female\" defaultChecked/>Female\r\n                </label>\r\n\r\n                <label>\r\n                    <input type=\"checkbox\" name=\"n/a\" defaultChecked/>N/A\r\n                </label>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './contacts.css';\r\nimport Contact from '../contact';\r\nimport Check from '../check';\r\nimport male from \"../img/male-icon.jpg\";\r\nimport female from \"../img/female-icon.jpg\";\r\nimport unknown from \"../img/unknown.png\";\r\n\r\n\r\nconst contacts = [{\r\n    firstName: \"Барней\",\r\n    lastName: \"Стинсовський\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n}, {\r\n    firstName: \"Робін\",\r\n    lastName: \"Щербатська\",\r\n    phone: \"+380931460123\",\r\n    gender: \"female\"\r\n}, {\r\n    firstName: \"Анонімний\",\r\n    lastName: \"Анонімус\",\r\n    phone: \"+380666666666\"\r\n}, {\r\n    firstName: \"Лілія\",\r\n    lastName: \"Олдровна\",\r\n    phone: \"+380504691254\",\r\n    gender: \"female\"\r\n}, {\r\n    firstName: \"Маршен\",\r\n    lastName: \"Еріксонян\",\r\n    phone: \"+380739432123\",\r\n    gender: \"male\"\r\n}, {\r\n    firstName: \"Теодор\",\r\n    lastName: \"Мотсбес\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\"\r\n}]\r\n\r\n\r\n\r\nexport default class Contacts extends Component {\r\n    \r\n    state = {\r\n        contacts: [...contacts],\r\n        search: '',\r\n        checked: true\r\n    }\r\n\r\n    setGender(gender) {\r\n        if (gender === 'male') {\r\n            return <img src={male} alt=\"male\"></img>;\r\n        } else if (gender === 'female') {\r\n            return <img src={female} alt=\"female\"></img>;\r\n        }\r\n        else {\r\n            return <img src={unknown} alt=\"unknown\"></img>;\r\n        }\r\n    }\r\n\r\n    handleSearchChange = (e)  => {\r\n        this.setState({\r\n            search: e.target.value\r\n        })\r\n\r\n        this.setState({\r\n            contacts:  [...contacts.filter(contact => {\r\n                return (\r\n                    contact.lastName.toLowerCase().includes(e.target.value.toLowerCase()) \r\n                    || contact.firstName.toLowerCase().includes(e.target.value.toLowerCase()) \r\n                    || contact.phone.includes(e.target.value)\r\n                )\r\n            })]\r\n        })\r\n    }\r\n\r\n    handleSexChange = (e) => {\r\n        this.setState({\r\n            checked: e.target.value\r\n        })\r\n\r\n        this.setState((checked) => ({\r\n            checked: !checked\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <input value={this.state.search} onChange={this.handleSearchChange} className=\"search-panel\" type=\"text\" placeholder=\"Пошук\"/>\r\n                </div>\r\n\r\n                {this.state.contacts.map((contact, id) => \r\n                    <Contact\r\n                        key = {id}\r\n                        firstName = {contact.firstName}\r\n                        lastName = {contact.lastName}\r\n                        phone = {contact.phone}\r\n                        gender = {this.setGender(contact.gender)}\r\n                    />\r\n                )}\r\n\r\n                <Check \r\n                    onClick = {this.handleSexChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import Contacts from './contacts';\r\nexport default Contacts;","import React, {Component} from 'react';\nimport Contacts from './components/contacts';\nimport './App.css';\n\nexport default class PhoneBook extends Component {\n  render() {\n    return (\n      <div className=\"contacts\">\n        <h1>Контакти</h1>\n        <Contacts/>\n      </div>\n    )\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport PhoneBook from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <PhoneBook />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}